name: Update AirSane Release

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual trigger

jobs:
  update-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3

      - name: Fetch latest release from AirSane
        id: fetch_release
        run: |
          curl -s https://api.github.com/repos/SimulPiscator/AirSane/releases/latest > latest_release.json
          tag=$(jq -r .tag_name latest_release.json)
          published_at=$(jq -r .published_at latest_release.json)
          release_date=$(echo "$published_at" | cut -d'T' -f1)
          commit_hash=$(jq -r .target_commitish latest_release.json)
          echo "tag=${tag}" >> $GITHUB_ENV
          echo "release_date=${release_date}" >> $GITHUB_ENV
          echo "commit_hash=${commit_hash}" >> $GITHUB_ENV

      - name: Check if the release already exists
        id: check_release
        run: |
          tag=$(jq -r .tag_name latest_release.json)
          if git rev-parse "refs/tags/${tag}" >/dev/null 2>&1; then
            echo "Release ${tag} already exists. Exiting."
            exit 0
          fi

      - name: Update Makefile with new release information
        run: |
          tag=${{ env.tag }}
          release_date=${{ env.release_date }}
          commit_hash=${{ env.commit_hash }}
          sed -i "s/^PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=${tag}/" airsaned/Makefile
          sed -i "s/^PKG_SOURCE_DATE:=.*/PKG_SOURCE_DATE:=${release_date}/" airsaned/Makefile
          sed -i "s/^PKG_MIRROR_HASH:=.*/PKG_MIRROR_HASH:=${commit_hash}/" airsaned/Makefile

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add airsaned/Makefile
          git commit -m "Update AirSane to version ${tag}"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master

      - name: Create a new release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.tag }}
          release_name: "AirSane ${{ env.tag }}"
          body: "Update AirSane to version ${{ env.tag }}. Released on ${{ env.release_date }}."
          draft: false
          prerelease: false
          generate_release_notes: true
