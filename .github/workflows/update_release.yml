name: Update AirSane Release

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual trigger

jobs:
  update-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Fetch latest release from AirSane
        id: fetch_release
        run: |
          tmpfile=$(mktemp)
          curl -s https://api.github.com/repos/SimulPiscator/AirSane/releases/latest > "${tmpfile}"
          tag=$(jq -r .tag_name "${tmpfile}")
          published_at=$(jq -r .published_at "${tmpfile}")
          release_date=$(echo "$published_at" | cut -d'T' -f1)
          release_title=$(jq -r .name "${tmpfile}")
          release_url=$(jq -r .html_url "${tmpfile}")
          echo "tag=${tag}" >> $GITHUB_ENV
          echo "release_date=${release_date}" >> $GITHUB_ENV
          echo "release_title=${release_title}" >> $GITHUB_ENV
          echo "release_url=${release_url}" >> $GITHUB_ENV
          rm -f "${tmpfile}"

      - name: Fetch commit SHA for the latest tag
        id: fetch_commit_sha
        run: |
          tag=${{ env.tag }}
          commit_hash=$(curl -s "https://api.github.com/repos/SimulPiscator/AirSane/tags" | jq -r --arg TAG "$tag" '.[] | select(.name == $TAG) | .commit.sha')
          echo "commit_hash=${commit_hash}" >> $GITHUB_ENV

      - name: Check if the release already exists
        id: check_release
        run: |
          tag=${{ env.tag }}
          if git rev-parse "refs/tags/${tag}" >/dev/null 2>&1; then
            echo "Release already exists."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Release ${tag} does not yet exist."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Update Makefile with new release information
        id: update_makefile
        if: steps.check_release.outputs.exists != 'true'
        run: |
          tag=${{ env.tag }}
          release_date=${{ env.release_date }}
          commit_hash=${{ env.commit_hash }}
          sed -i "s/^PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=${tag}/" airsaned/Makefile
          sed -i "s/^PKG_SOURCE_DATE:=.*/PKG_SOURCE_DATE:=${release_date}/" airsaned/Makefile
          sed -i "s/^PKG_MIRROR_HASH:=.*/PKG_MIRROR_HASH:=${commit_hash}/" airsaned/Makefile

      - name: Check for changes
        id: check_changes
        if: steps.check_release.outputs.exists != 'true'
        run: |
          if git diff --exit-code; then
            echo "No changes to commit."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        id: commit_changes
        if: steps.check_release.outputs.exists != 'true' && steps.check_changes.outputs.changes != 'false'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag "${tag}"
          git commit -a -m "feat: update AirSane source reference to ${tag}"

      - name: Push changes
        id: push_changes
        if: steps.check_release.outputs.exists != 'true' && steps.check_changes.outputs.changes != 'false'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          tags: true
